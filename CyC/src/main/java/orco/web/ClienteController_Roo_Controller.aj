// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package orco.web;

import java.lang.Long;
import java.lang.String;
import javax.annotation.PostConstruct;
import orco.domain.Cliente;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.convert.support.GenericConversionService;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect ClienteController_Roo_Controller {
    
    @Autowired
    private GenericConversionService ClienteController.conversionService;
    
    @RequestMapping(params = "form", method = RequestMethod.GET)
    public String ClienteController.createForm(Model model) {
        model.addAttribute("cliente", new Cliente());
        return "clientes/create";
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public String ClienteController.show(@PathVariable("id") Long id, Model model) {
        model.addAttribute("cliente", Cliente.findCliente(id));
        model.addAttribute("itemId", id);
        return "clientes/show";
    }
    
   
    @RequestMapping(value = "/{id}", params = "form", method = RequestMethod.GET)
    public String ClienteController.updateForm(@PathVariable("id") Long id, Model model) {
        model.addAttribute("cliente", Cliente.findCliente(id));
        return "clientes/update";
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.DELETE)
    public String ClienteController.delete(@PathVariable("id") Long id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model model) {
        Cliente.findCliente(id).remove();
        model.addAttribute("page", (page == null) ? "1" : page.toString());
        model.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/clientes?page=" + ((page == null) ? "1" : page.toString()) + "&size=" + ((size == null) ? "10" : size.toString());
    }
    
    @RequestMapping(params = { "find=ByUserNamePortal", "form" }, method = RequestMethod.GET)
    public String ClienteController.findClientesByUserNamePortalForm(Model model) {
        return "clientes/findClientesByUserNamePortal";
    }
    
    @RequestMapping(params = "find=ByUserNamePortal", method = RequestMethod.GET)
    public String ClienteController.findClientesByUserNamePortal(@RequestParam("userNamePortal") String userNamePortal, Model model) {
        model.addAttribute("clientes", Cliente.findClientesByUserNamePortal(userNamePortal).getResultList());
        return "clientes/list";
    }
    
       
    @PostConstruct
    void ClienteController.registerConverters() {
        conversionService.addConverter(getClienteConverter());
    }
 
    
}
